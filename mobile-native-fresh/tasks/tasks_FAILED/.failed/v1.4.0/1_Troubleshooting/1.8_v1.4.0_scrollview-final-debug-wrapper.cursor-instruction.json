{
  "notes": [
    "üß† MISSION: Resolve final ScrollView layout runtime error in DashboardScreen.tsx and bake in a global debug wrapper to catch any future violations",
    "üéØ GOAL: Patch lingering layout violations, then globally wrap <ScrollView> with DebugScrollView that logs style vs. contentContainerStyle issues if DEBUG_LAYOUT_PROPS=true",
    "üìå CONTEXT: Runtime error persists in DashboardScreen.tsx despite AST and scanner passes. Error: 'Invariant Violation: ScrollView child layout (['alignItems','justifyContent']) must be applied through the contentContainerStyle prop'",
    "üí• BUG: Layout props are still applied via style in a spread, condition, or helper function not statically traceable",
    "üîß FIX SUMMARY: Manually patch offending <ScrollView>, and bake DebugScrollView into app so future violations are automatically detected and logged in development mode",
    "üîê RELEVANCE: React Native's runtime layout enforcement on ScrollView is fatal. We must ensure 100% compliance and visibility."
  ],
  "parseCheck": true,
  "onParseFail": "revert-and-alert",
  "postMutationBuild": "tsc --noEmit && npm run lint && npx expo start --dev-client",
  "blockCommitOnError": true,
  "alertUserOnParseFail": true,
  "preCommit": {
    "before": [
      "git add .",
      "git commit -m \"chore(snapshot): before final ScrollView debug wrapper\"",
      "git tag v1.4.0_scrollview-debug-wrapper-pre_$(date -u +%y%m%d_%H%MUTC)",
      "sh scripts/backup-tag-push.sh v1.4.0_scrollview-debug-wrapper-pre_$(date -u +%y%m%d_%H%MUTC)"
    ]
  },
  "branch": "fix/v1.4.0_scrollview-debug-wrapper",
  "mode": "manual",
  "watchConsole": true,
  "onReloadHang": "Move to background and resume automatically",
  "phases": [
    {
      "section": "Final Manual Fix in DashboardScreen",
      "actions": [
        "Open src/features/home/screens/DashboardScreen.tsx",
        "Identify any remaining <ScrollView> with layout props in style or nested references",
        "Manually move those layout props to contentContainerStyle",
        "Confirm fix removes runtime error"
      ],
      "commit": "fix: final ScrollView layout patch in DashboardScreen.tsx",
      "tag": "v1.4.0_scrollview-final-patch_$(date -u +%y%m%d_%H%MUTC)"
    },
    {
      "section": "Inject DebugScrollView Wrapper Globally",
      "actions": [
        "Create src/components/devtools/DebugScrollView.tsx with the layout-tracing wrapper component",
        "Update app alias or theme wrapper (e.g., ThemeProvider, AppContent) to globally alias <ScrollView> to DebugScrollView if __DEV__ && global.DEBUG_LAYOUT_PROPS === true",
        "Inject the following safe global runtime toggle:",
        "- In App.tsx or setupEnv.ts: `if (__DEV__) global.DEBUG_LAYOUT_PROPS = true`",
        "- Optionally make it toggleable via a local devtools screen or gesture"
      ],
      "commit": "feat: add global DebugScrollView wrapper to detect layout violations in dev",
      "tag": "v1.4.0_scrollview-debug-wrapper-injected_$(date -u +%y%m%d_%H%MUTC)"
    },
    {
      "section": "Final Runtime Test and Cleanup",
      "actions": [
        "Run tsc, lint, and expo start to confirm boot passes",
        "Confirm that no ScrollView layout violations are logged",
        "Confirm that DebugScrollView does not interfere with production mode (strip via __DEV__ guard)"
      ],
      "commit": "chore: confirm ScrollView layout system clean and dev-auditable",
      "tag": "v1.4.0_scrollview-final-verified_$(date -u +%y%m%d_%H%MUTC)"
    }
  ],
  "final": {
    "commit": "chore: complete ScrollView layout recovery and dev-safe validation hooks",
    "tag": "v1.4.0_scrollview-clean-locked_$(date -u +%y%m%d_%H%MUTC)",
    "notes": "Dashboard runtime error resolved, DebugScrollView active in dev for future safety. Layout system stable and compliant."
  }
}

