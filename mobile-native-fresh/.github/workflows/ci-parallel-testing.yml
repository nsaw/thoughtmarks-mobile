name: CI/CD Parallel Testing

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  NODE_VERSION: '18'
  EXPO_VERSION: 'latest'

jobs:
  # Legacy Environment Testing
  test-legacy:
    name: Test Legacy Environment
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18, 20]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Setup Expo CLI
      run: npm install -g @expo/cli@${{ env.EXPO_VERSION }}
      
    - name: Install dependencies
      run: npm ci
      
    - name: Set legacy environment
      run: |
        echo "EXPO_PUBLIC_USE_NEXTGEN=false" >> $GITHUB_ENV
        echo "EXPO_PUBLIC_ENVIRONMENT=legacy" >> $GITHUB_ENV
        echo "EXPO_PUBLIC_DEBUG_MODE=true" >> $GITHUB_ENV
        
    - name: Run TypeScript check
      run: npx tsc --noEmit
      
    - name: Run linting
      run: npm run lint:guard
      
    - name: Run environment validation
      run: |
        node -e "
        const { validateEnvironmentFlags } = require('./src-reference-complete/utils/envValidation.ts');
        const flags = validateEnvironmentFlags();
        console.log('Legacy environment flags:', flags);
        if (flags.USE_NEXTGEN !== false) {
          throw new Error('Legacy environment should have USE_NEXTGEN=false');
        }
        console.log('✅ Legacy environment validation passed');
        "
        
    - name: Test legacy app compilation
      run: |
        npx expo export --platform web --output-dir ./dist-legacy
        echo "✅ Legacy app compilation successful"
        
    - name: Upload legacy artifacts
      uses: actions/upload-artifact@v4
      with:
        name: legacy-build-${{ matrix.node-version }}
        path: ./dist-legacy
        retention-days: 7

  # NextGen Environment Testing
  test-nextgen:
    name: Test NextGen Environment
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18, 20]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Setup Expo CLI
      run: npm install -g @expo/cli@${{ env.EXPO_VERSION }}
      
    - name: Install dependencies
      run: npm ci
      
    - name: Set nextgen environment
      run: |
        echo "EXPO_PUBLIC_USE_NEXTGEN=true" >> $GITHUB_ENV
        echo "EXPO_PUBLIC_ENVIRONMENT=nextgen" >> $GITHUB_ENV
        echo "EXPO_PUBLIC_DEBUG_MODE=true" >> $GITHUB_ENV
        
    - name: Run TypeScript check
      run: npx tsc --noEmit
      
    - name: Run linting
      run: npm run lint:guard
      
    - name: Run environment validation
      run: |
        node -e "
        const { validateEnvironmentFlags } = require('./src-reference-complete/utils/envValidation.ts');
        const flags = validateEnvironmentFlags();
        console.log('NextGen environment flags:', flags);
        if (flags.USE_NEXTGEN !== true) {
          throw new Error('NextGen environment should have USE_NEXTGEN=true');
        }
        console.log('✅ NextGen environment validation passed');
        "
        
    - name: Test nextgen app compilation
      run: |
        npx expo export --platform web --output-dir ./dist-nextgen
        echo "✅ NextGen app compilation successful"
        
    - name: Upload nextgen artifacts
      uses: actions/upload-artifact@v4
      with:
        name: nextgen-build-${{ matrix.node-version }}
        path: ./dist-nextgen
        retention-days: 7

  # Parallel Integration Testing
  integration-test:
    name: Integration Test
    runs-on: ubuntu-latest
    needs: [test-legacy, test-nextgen]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Download legacy artifacts
      uses: actions/download-artifact@v4
      with:
        name: legacy-build-18
        path: ./dist-legacy
        
    - name: Download nextgen artifacts
      uses: actions/download-artifact@v4
      with:
        name: nextgen-build-18
        path: ./dist-nextgen
        
    - name: Run integration tests
      run: |
        echo "Testing dual-mount integration..."
        
        # Test environment toggle functionality
        node -e "
        const { getEnvironmentFlags } = require('./src-reference-complete/utils/envValidation.ts');
        
        // Test legacy environment
        process.env.EXPO_PUBLIC_USE_NEXTGEN = 'false';
        const legacyFlags = getEnvironmentFlags();
        console.log('Legacy flags:', legacyFlags);
        
        // Test nextgen environment
        process.env.EXPO_PUBLIC_USE_NEXTGEN = 'true';
        const nextgenFlags = getEnvironmentFlags();
        console.log('NextGen flags:', nextgenFlags);
        
        if (legacyFlags.USE_NEXTGEN === nextgenFlags.USE_NEXTGEN) {
          throw new Error('Environment toggle not working');
        }
        
        console.log('✅ Integration test passed');
        "
        
    - name: Generate test report
      run: |
        echo "## CI/CD Parallel Testing Report" > test-report.md
        echo "" >> test-report.md
        echo "### Test Results:" >> test-report.md
        echo "- ✅ Legacy Environment: PASSED" >> test-report.md
        echo "- ✅ NextGen Environment: PASSED" >> test-report.md
        echo "- ✅ Integration Testing: PASSED" >> test-report.md
        echo "" >> test-report.md
        echo "### Environment Isolation:" >> test-report.md
        echo "- ✅ Legacy and NextGen environments properly isolated" >> test-report.md
        echo "- ✅ Environment flags working correctly" >> test-report.md
        echo "- ✅ Dual-mount toggle functional" >> test-report.md
        
    - name: Upload test report
      uses: actions/upload-artifact@v4
      with:
        name: test-report
        path: test-report.md
        retention-days: 30

  # Security and Quality Checks
  security-quality:
    name: Security & Quality Checks
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run security audit
      run: npm audit --audit-level moderate
      
    - name: Check for vulnerabilities
      run: |
        npm audit --json > audit-report.json || true
        echo "Security audit completed"
        
    - name: Run code quality checks
      run: |
        echo "Running code quality checks..."
        npm run lint:guard
        npx tsc --noEmit
        echo "✅ Code quality checks passed"
        
    - name: Check environment files
      run: |
        echo "Validating environment files..."
        if [ ! -f "env.app" ]; then
          echo "❌ env.app file missing"
          exit 1
        fi
        if [ ! -f "env.account" ]; then
          echo "❌ env.account file missing"
          exit 1
        fi
        echo "✅ Environment files present"
        
    - name: Upload quality report
      uses: actions/upload-artifact@v4
      with:
        name: quality-report
        path: audit-report.json
        retention-days: 30

  # Final Status Report
  status-report:
    name: Status Report
    runs-on: ubuntu-latest
    needs: [test-legacy, test-nextgen, integration-test, security-quality]
    if: always()
    
    steps:
    - name: Generate status report
      run: |
        echo "## CI/CD Pipeline Status Report" > status-report.md
        echo "" >> status-report.md
        echo "### Pipeline Results:" >> status-report.md
        
        if [ "${{ needs.test-legacy.result }}" == "success" ]; then
          echo "- ✅ Legacy Environment Tests: PASSED" >> status-report.md
        else
          echo "- ❌ Legacy Environment Tests: FAILED" >> status-report.md
        fi
        
        if [ "${{ needs.test-nextgen.result }}" == "success" ]; then
          echo "- ✅ NextGen Environment Tests: PASSED" >> status-report.md
        else
          echo "- ❌ NextGen Environment Tests: FAILED" >> status-report.md
        fi
        
        if [ "${{ needs.integration-test.result }}" == "success" ]; then
          echo "- ✅ Integration Tests: PASSED" >> status-report.md
        else
          echo "- ❌ Integration Tests: FAILED" >> status-report.md
        fi
        
        if [ "${{ needs.security-quality.result }}" == "success" ]; then
          echo "- ✅ Security & Quality Checks: PASSED" >> status-report.md
        else
          echo "- ❌ Security & Quality Checks: FAILED" >> status-report.md
        fi
        
        echo "" >> status-report.md
        echo "### Overall Status:" >> status-report.md
        if [ "${{ needs.test-legacy.result }}" == "success" ] && [ "${{ needs.test-nextgen.result }}" == "success" ] && [ "${{ needs.integration-test.result }}" == "success" ] && [ "${{ needs.security-quality.result }}" == "success" ]; then
          echo "🎉 **ALL TESTS PASSED** - Pipeline successful!" >> status-report.md
        else
          echo "⚠️ **SOME TESTS FAILED** - Review required" >> status-report.md
        fi
        
    - name: Upload status report
      uses: actions/upload-artifact@v4
      with:
        name: status-report
        path: status-report.md
        retention-days: 30 