{
  "showInUI": true,
  "blockCommitOnError": true,
  "parseCheck": true,
  "onParseFail": "alert-and-rollback",
  "postMutationBuild": [
    "npm install --save-dev @types/testing-library__react-native @types/testing-library__jest-native",
    "chmod +x scripts/*.sh",
    "tsc --noEmit --skipLibCheck",
    "eslint . --ext .ts,.tsx --max-warnings=0",
    "yarn test:unit --watchAll=false",
    "node scripts/validate-dual-mount.js",
    "node scripts/validate-environment-specific.js",
    "node scripts/verify-sacred-view-mounts.js",
    "node scripts/validate-protection-system.js",
    "node scripts/test-mount-points.js"
  ],
  "mode": "auto",
  "watchConsole": true,
  "onReloadHang": "Move to background and resume automatically",
  "branch": "feature/sacred-view-mounts",
  "notes": [
    "üß† MISSION: Set up sacred view mounts and protection system with dual-mount validation",
    "üéØ GOAL: Establish sacred view mount system for protected component rendering with comprehensive testing",
    "üö® SAFETY ENFORCEMENT üö®",
    "‚úÖ Test sacred view mounts, verify protection system, validate mount point functionality",
    "‚úÖ Ensure proper testing and validation of sacred component isolation",
    "‚úÖ Validate protection system and mount point functionality before proceeding",
    "üìù CONTEXT: Sacred view mounts are essential for the hybrid shell strategy. We need to create mount points for sacred components that are protected from role wrapping and maintain their original behavior.",
    "üîí RELEVANCE: Critical for protecting sacred components during migration",
    "üîÑ DUAL-MOUNT: This patch validates sacred view mounts work in both legacy and nextgen environments"
  ],
  "phases": [
    {
      "phase": 1,
      "step": 2,
      "attempt": 1,
      "task": "Set up sacred view mounts and protection system with dual-mount validation",
      "version": "v1.4.211(P1.2.1)",
      "priority": "high",
      "estimatedTime": "90 minutes",
      "executionSteps": [
        "Create src-nextgen/shell/SacredViewMounts.ts",
        "Create sacred view mount interfaces with TypeScript",
        "Set up protection system for sacred components with validation",
        "Configure mount point validation",
        "Set up sacred component isolation",
        "Install required testing dependencies",
        "Test sacred view mount functionality with comprehensive tests",
        "Validate protection system behavior in legacy environment",
        "Validate protection system behavior in nextgen environment",
        "Create sacred component validation scripts"
      ],
      "validation": [
        "Test sacred view mounts",
        "Verify protection system working",
        "Confirm mount point functionality",
        "Validate sacred component isolation",
        "Test protection system validation",
        "Verify sacred component validation scripts",
        "Validate dual-mount compatibility",
        "Test sacred view mounts in legacy environment",
        "Test sacred view mounts in nextgen environment"
      ],
      "rollbackPlan": [
        "Git tag for this step",
        "Can revert sacred view mount setup",
        "No impact on app functionality",
        "Restore original package.json if needed",
        "Preserve dual-mount system integrity"
      ],
      "gitTag": "sacred-v1.4.211(P1.2.1)_sacred-view-mounts",
      "summaryFile": "summary-v1.4.211(P1.2.1)_sacred-view-mounts.md"
    }
  ],
  "validationGates": [
    "Parse and type checking (tsc --noEmit --skipLibCheck)",
    "ESLint validation (eslint . --ext .ts,.tsx --max-warnings=0)",
    "Unit test execution (yarn test:unit --watchAll=false)",
    "Dual-mount validation (validate-dual-mount.js)",
    "Environment-specific validation (validate-environment-specific.js)",
    "Sacred view mounts validation",
    "Protection system validation",
    "Mount point functionality validation",
    "Sacred component validation scripts validation"
  ],
  "successCriteria": [
    "Sacred view mounts operational with TypeScript",
    "Protection system working with validation",
    "Mount points functional with tests",
    "Sacred component isolation validated",
    "Protection system validation operational",
    "Sacred component validation scripts working",
    "Dual-mount compatibility confirmed",
    "Sacred view mounts work in both legacy and nextgen environments"
  ],
  "dualMountValidation": {
    "legacyEnvironment": {
      "validation": [
        "test -f THAWED-REFERENCE/src-reference/components/AutoRoleView.tsx",
        "test -f THAWED-REFERENCE/src-reference/components/ui/Button.tsx",
        "node scripts/verify-sacred-view-mounts.js --env=legacy"
      ],
      "rollback": [
        "git checkout THAWED-REFERENCE/src-reference/components/AutoRoleView.tsx",
        "git checkout THAWED-REFERENCE/src-reference/components/ui/Button.tsx"
      ]
    },
    "nextgenEnvironment": {
      "validation": [
        "test -f src-nextgen/shell/SacredViewMounts.ts",
        "test -f src-nextgen/shell/SacredViewMounts.test.ts",
        "node scripts/verify-sacred-view-mounts.js --env=nextgen"
      ],
      "rollback": [
        "git checkout src-nextgen/shell/SacredViewMounts.ts",
        "git checkout src-nextgen/shell/SacredViewMounts.test.ts"
      ]
    }
  },
    }
  ],
  "dependencies": {
    "dev": [
      "@types/testing-library__react-native",
      "@types/testing-library__jest-native"
    ]
  }
} 