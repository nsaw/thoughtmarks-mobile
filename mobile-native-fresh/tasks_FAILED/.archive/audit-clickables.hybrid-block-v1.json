{
  "notes": [
    "ðŸ§  MISSION: Project-wide clickable element audit and routing/enforcement fix",
    "ðŸŽ¯ GOAL: Ensure all clickable UI elements have valid, working routing (navigation) or logic handlers. All navigation routes must exist. Any broken/undefined routes must be fixed or flagged for manual review. All changes must strictly enforce single useTheme hook per function, and accessibility props must not be inside event handlers.",
    "âœ… Pre-check: Parse each file for syntax before/after mutation.",
    "âœ… Tag and backup before mutation.",
    "âœ… Run lint and type-check globally after mutation; block commit on error.",
    "ðŸ“Œ CONTEXT: Previous bulk autofixes introduced duplicate theme hooks and malformed onPress handlers. Now requiring ironclad enforcement and routing audit.",
    "ðŸ’¥ Bug: Broken navigation, undefined handlers, duplicate theme hooks, and accessibility prop misuse.",
    "ðŸ”§ Fix Summary: Audit all clickables, fix/finalize navigation or logic, enforce handler and theme usage patterns, and alert for any element that cannot be auto-fixed."
  ],
  "parseCheck": true,
  "onParseFail": "revert-and-alert",
  "postMutationBuild": "tsc --noEmit && npm run lint:fix-all",
  "blockCommitOnError": true,
  "alertUserOnParseFail": true,
  "preCommit": {
    "before": [
      "git add .",
      "git commit -m \"chore(rollback): backup before clickable audit\"",
      "git tag v1.3.9_clickable-audit-rollback_$(date +'%y%m%d_%H%MUTC')",
      "sh scripts/backup-tag-push.sh v1.3.9_clickable-audit-rollback_$(date +'%y%m%d_%H%MUTC')"
    ]
  },
  "branch": "fix/v1.3.9_clickable-audit-and-routing",
  "mode": "auto",
  "watchConsole": true,
  "onReloadHang": "Move to background and resume automatically",
  "phases": [
    {
      "section": "CLICKABLE AUDIT AND ENFORCEMENT",
      "actions": [
        "For every .tsx in src/:",
        "- Scan for all TouchableOpacity, Pressable, Button, and other clickable JSX elements.",
        "- Verify `onPress` (and similar) points to a defined handler/function. If handler is undefined or broken, fix if possible or flag for manual review.",
        "- If navigation, ensure all routes used are defined in src/navigation/routes.ts. If not, flag for manual review.",
        "- Confirm no accessibility props (accessibilityRole, accessible, accessibilityLabel) appear inside event handlers.",
        "- Ensure each component/function uses at most one `const { tokens } = useTheme();`, declared at the top of the function.",
        "- If any issue cannot be auto-fixed (e.g. missing route, ambiguous handler), revert and flag for manual review."
      ],
      "commit": "fix: audit all clickable elements and fix routing and handler enforcement",
      "tag": "v1.3.9_clickable-audit-fix_$(date +'%y%m%d_%H%MUTC')"
    }
  ],
  "final": {
    "commit": "chore: complete clickable element audit and routing enforcement project-wide",
    "tag": "v1.3.9_clickable-audit-complete_$(date +'%y%m%d_%H%MUTC')",
    "notes": "All navigation/functionality elements checked, fixed, and enforced. All duplicate useTheme hooks removed. All handlers and accessibility props validated. Rollback and checkpoint tags applied."
  }
}

